.. title: Approximation Error of Position
.. slug: approximation-error-of-position
.. date: 2017-02-10 13:59:56 UTC+08:00
.. tags: algorithm, clothoid, mathjax
.. category: math
.. link:
.. description:
.. type: text

*cloapp.jl*
============

``generalClo()``
#################

.. TEASER_END

- Uniform Sampling

  - *LUT_sameSeg.h5*: generated by ``lookupTableEven()``

    - ``lookupTableEven(num::Int64, theta_max, sigma, unitLen)``

      Input:

      * ``num``: number of total segments :math:`N`. A larger :math:`N` produces longer curve.

      * ``theta_max``: maximum winding angle of each segment. Actually it is
        the maximum difference of the winding angle of each segment.

        .. math::

           \Delta \theta = \theta(s)-\theta_0=\kappa_0 s + \frac{\sigma s^2}{2}

        Then, ``theta_max`` is :math:`\Delta \theta_{\max}`. It is not directly used in the function but as a criterion for checking purpose. We set ``theta_max=0.5*pi`` by default.

        明显，因为 :math:`s`=``unitLen`` 是个定值，而 :math:`\sigma` 也是定值（设为1），:math:`\Delta \theta_{\max}` 出现在 :math:`\kappa_0` 取最大时，即最末一段。最后一段的起始曲率由下式得到, 其中 :math:`N` 是总的段数。

        .. math::

           \kappa_{0,N} = \sigma (N-1) s

        代入到上面的 :math:`\Delta \theta` 表达式，得到：

        .. math::

           (N-1) \sigma s^2 + \frac{\sigma s^2}{2} \le \Delta \theta_{\max}=\frac{\pi}{2}

        即，当 :math:`\sigma=1` 时, :math:`N` 与 :math:`s` 要符合上述关系式。

      * ``sigma``: sharpness :math:`\sigma`

      * ``unitLen``: length of each small segment :math:`s` (they have the same ``unitLen`` since they are uniformly
        sampled)

      Output inside *LUT_sameSeg.h5*:

      * ``umax``: an array of maximum lengths of all segments

      * ``utotal``: an array of total lengths of all previous segments (not including current one)

      * ``coeff``: an array of bezier coefficients

- Nonuniform Sampling

  - *LUT.h5*: generated by ``lookupTable()``

    - ``lookupTable(num::Int64, theta_max, sigma, elasticCoeff)``

      Input:

      * ``num``: number of total segments :math:`N`. A larger :math:`N` produces longer curve.
        (``N=100`` in our draft).

      * ``theta_max``: maximum winding angle of each segment. Actually it is
        the maximum difference of the winding angle of each segment. (``theta_max=0.35*pi`` in our draft).

      * ``sigma``: sharpness :math:`\sigma`. (``sigma=1.0`` in the draft).

      * ``elasticCoeff``: the coefficient to adjust the length of the first several segments.
        (``elasticCoeff=0.5`` in the draft).

      Output inside *LUT.h5*:

      * ``umax``: an array of maximum lengths of all segments

      * ``utotal``: an array of total lengths of all previous segments (not including current one)

      * ``coeff``: an array of bezier coefficients

    - 改变：迭代生成 *LUT.h5*: ``lookupTableWithPrecision()``

      - 指定误差标准，如以 "position error" 为准。则


*cloerr.jl*
=============

``errCurT()``
###############

.. Attention::
   该函数是计算一个 general 曲线所有误差的最重要的函数。
